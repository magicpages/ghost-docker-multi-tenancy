version: '3.8'

# Ghost Multi-Tenant Infrastructure
# Shared services for all Ghost sites

services:
  # Shared MySQL Database
  mysql:
    image: mysql:8.0.42
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER:-ghost}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/mysql-init:/docker-entrypoint-initdb.d:ro
    networks:
      - ghost_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Caddy Reverse Proxy with auto-SSL
  caddy:
    image: caddy:2.10.0-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - ghost_network

  # Multi-tenant ActivityPub
  activitypub:
    image: ghcr.io/tryghost/activitypub:1.0.1
    container_name: activitypub
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - activitypub_content:/opt/activitypub/content
    environment:
      NODE_ENV: production
      PORT: 8080
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: activitypub_db
      ALLOW_PRIVATE_ADDRESS: true
      USE_MQ: false
      LOCAL_STORAGE_PATH: /opt/activitypub/content/images/activitypub
      LOCAL_STORAGE_HOSTING_URL: http://activitypub:8080/content/images/activitypub
    networks:
      - ghost_network
    depends_on:
      mysql:
        condition: service_healthy

  # Tinybird Local for Analytics
  tinybird-local:
    image: tinybirdco/tinybird-local:latest
    container_name: tinybird-local
    platform: linux/amd64
    restart: unless-stopped
    environment:
      - COMPATIBILITY_MODE=1
    ports:
      - "${TINYBIRD_PORT:-7181}:7181"
    networks:
      - ghost_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7181/tokens"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Ghost Traffic Analytics Service
  traffic-analytics:
    image: ghost/traffic-analytics:1.0.1
    container_name: traffic-analytics
    restart: unless-stopped
    ports:
      - "${TRAFFIC_ANALYTICS_PORT:-3001}:3000"
    volumes:
      - traffic_analytics_data:/data
    environment:
      - NODE_ENV=production
      - PROXY_TARGET=http://tinybird-local:7181/v0/events
      - SALT_STORE_TYPE=${SALT_STORE_TYPE:-file}
      - SALT_STORE_FILE_PATH=/data/salts.json
      - TINYBIRD_TRACKER_TOKEN=${TINYBIRD_TRACKER_TOKEN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    networks:
      - ghost_network
    depends_on:
      tinybird-local:
        condition: service_healthy

networks:
  ghost_network:
    driver: bridge

volumes:
  mysql_data:
  caddy_data:
  caddy_config:
  traffic_analytics_data:
  activitypub_content:

# Individual Ghost sites are defined in separate compose files:
# docker-compose.yoursite.yml